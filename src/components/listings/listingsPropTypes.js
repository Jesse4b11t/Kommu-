import PropTypes, { oneOfType } from 'prop-types';

const listingPropTypes = {
    formData: PropTypes.shape({
        internalName: PropTypes.string.isRequired,
        title: PropTypes.string.isRequired,
        shortDescription: PropTypes.string.isRequired,
        description: PropTypes.string.isRequired,
        bedRooms: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        baths: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        housingTypeId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        accessTypeId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        guestCapacity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        costPerNight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        costPerWeek: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        checkInTime: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        checkOutTime: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        daysAvailable: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        hasVerifiedOwnership: PropTypes.bool.isRequired,
        isActive: PropTypes.bool.isRequired,
        createdBy: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        images: PropTypes.arrayOf(oneOfType([PropTypes.string, PropTypes.number])).isRequired,
        locationTypeId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        lineOne: PropTypes.string.isRequired,
        lineTwo: PropTypes.string,
        zip: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        stateId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        latitude: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        longitude: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        modifiedBy: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        amenities: PropTypes.arrayOf(oneOfType([PropTypes.string, PropTypes.number])).isRequired,
        name: PropTypes.string.isRequired,
        hasVeteranBenefits: PropTypes.bool.isRequired,
        isHostProvided: PropTypes.bool.isRequired,
    }),

    values: PropTypes.shape({
        internalName: PropTypes.string.isRequired,
        title: PropTypes.string.isRequired,
        shortDescription: PropTypes.string.isRequired,
        description: PropTypes.string.isRequired,
        bedRooms: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        baths: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        housingTypeId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        accessTypeId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        guestCapacity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        costPerNight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        costPerWeek: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        checkInTime: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        checkOutTime: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        daysAvailable: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        hasVerifiedOwnership: PropTypes.bool.isRequired,
        isActive: PropTypes.bool.isRequired,
        createdBy: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        images: PropTypes.arrayOf(oneOfType([PropTypes.string, PropTypes.number])).isRequired,
        locationTypeId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        lineOne: PropTypes.string.isRequired,
        lineTwo: PropTypes.string,
        zip: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        stateId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        latitude: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        longitude: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        modifiedBy: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
        amenities: PropTypes.arrayOf(oneOfType([PropTypes.string, PropTypes.number])).isRequired,
        name: PropTypes.string.isRequired,
        hasVeteranBenefits: PropTypes.bool.isRequired,
        isHostProvided: PropTypes.bool.isRequired,
    }),

    touched: PropTypes.shape({
        internalName: PropTypes.bool,
        title: PropTypes.bool,
        shortDescription: PropTypes.bool,
        description: PropTypes.bool,
        bedRooms: PropTypes.bool,
        baths: PropTypes.bool,
        housingTypeId: PropTypes.bool,
        accessTypeId: PropTypes.bool,
        guestCapacity: PropTypes.bool,
        costPerNight: PropTypes.bool,
        costPerWeek: PropTypes.bool,
        checkInTime: PropTypes.bool,
        checkOutTime: PropTypes.bool,
        daysAvailable: PropTypes.bool,
        hasVerifiedOwnership: PropTypes.bool,
        isActive: PropTypes.bool,
        createdBy: PropTypes.bool,
        images: PropTypes.bool,
        locationTypeId: PropTypes.bool,
        lineOne: PropTypes.bool,
        lineTwo: PropTypes.bool,
        zip: PropTypes.bool,
        stateId: PropTypes.bool,
        latitude: PropTypes.bool,
        longitude: PropTypes.bool,
        modifiedBy: PropTypes.bool,
        amenities: PropTypes.bool,
        name: PropTypes.bool,
        hasVeteranBenefits: PropTypes.bool,
        isHostProvided: PropTypes.bool,
    }),

    errors: PropTypes.shape({
        internalName: PropTypes.string,
        title: PropTypes.string,
        shortDescription: PropTypes.string,
        description: PropTypes.string,
        bedRooms: PropTypes.string,
        baths: PropTypes.string,
        housingTypeId: PropTypes.string,
        accessTypeId: PropTypes.string,
        guestCapacity: PropTypes.string,
        costPerNight: PropTypes.string,
        costPerWeek: PropTypes.string,
        checkInTime: PropTypes.string,
        checkOutTime: PropTypes.string,
        daysAvailable: PropTypes.string,
        hasVerifiedOwnership: PropTypes.string,
        isActive: PropTypes.string,
        createdBy: PropTypes.string,
        images: PropTypes.string,
        locationTypeId: PropTypes.string,
        lineOne: PropTypes.string,
        lineTwo: PropTypes.string,
        zip: PropTypes.string,
        stateId: PropTypes.string,
        latitude: PropTypes.string,
        longitude: PropTypes.string,
        modifiedBy: PropTypes.string,
        amenities: PropTypes.string,
        name: PropTypes.string,
        hasVeteranBenefits: PropTypes.string,
        isHostProvided: PropTypes.string,
    }),

    handleChange: PropTypes.func.isRequired,
    handleBlur: PropTypes.func.isRequired,
    handleSubmit: PropTypes.func.isRequired,
    onChange: PropTypes.func.isRequired,
    nextLabel: PropTypes.string,
    backLabel: PropTypes.string,
    onBack: PropTypes.func.isRequired,
    onNext: PropTypes.func.isRequired,
    isSubmitting: PropTypes.bool.isRequired,
    cantBack: PropTypes.bool.isRequired,
};

export { listingPropTypes };
